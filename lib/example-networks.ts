import type { Node, Edge } from "@xyflow/react"

export interface ExampleNetwork {
  name: string
  description: string
  nodes: Node[]
  edges: Edge[]
}

export const EXAMPLE_NETWORKS: ExampleNetwork[] = [
  {
    name: "Simple MLP",
    description: "Basic Multi-Layer Perceptron with a flatten layer for image-like input.",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 200 },
        data: { channels: 1, height: 28, width: 28 },
      },
      {
        id: "flatten-1",
        type: "flattenNode",
        position: { x: 300, y: 200 },
        data: {},
      },
      {
        id: "linear-1",
        type: "linearNode",
        position: { x: 500, y: 200 },
        data: { in_features: 784, out_features: 256 },
      },
      {
        id: "relu-1",
        type: "reluNode",
        position: { x: 700, y: 200 },
        data: {},
      },
      {
        id: "linear-2",
        type: "linearNode",
        position: { x: 900, y: 200 },
        data: { in_features: 256, out_features: 128 },
      },
      {
        id: "relu-2",
        type: "reluNode",
        position: { x: 1100, y: 200 },
        data: {},
      },
      {
        id: "linear-3",
        type: "linearNode",
        position: { x: 1300, y: 200 },
        data: { in_features: 128, out_features: 64 },
      },
      {
        id: "relu-3",
        type: "reluNode",
        position: { x: 1500, y: 200 },
        data: {},
      },
      {
        id: "linear-4",
        type: "linearNode",
        position: { x: 1700, y: 200 },
        data: { in_features: 64, out_features: 10 },
      },
    ],
    edges: [
      { id: "e1-f1", source: "input-1", target: "flatten-1" },
      { id: "ef1-l1", source: "flatten-1", target: "linear-1" },
      { id: "el1-r1", source: "linear-1", target: "relu-1" },
      { id: "er1-l2", source: "relu-1", target: "linear-2" },
      { id: "el2-r2", source: "linear-2", target: "relu-2" },
      { id: "er2-l3", source: "relu-2", target: "linear-3" },
      { id: "el3-r3", source: "linear-3", target: "relu-3" },
      { id: "er3-l4", source: "relu-3", target: "linear-4" },
    ],
  },
  {
    name: "LeNet-5",
    description: "Classic CNN for digit recognition (1998)",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 1, height: 32, width: 32 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 1, out_channels: 6, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 200 },
        data: {},
      },
      {
        id: "pool1-4",
        type: "avgpool2dNode",
        position: { x: 700, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 6, out_channels: 16, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu2-6",
        type: "reluNode",
        position: { x: 1100, y: 200 },
        data: {},
      },
      {
        id: "pool2-7",
        type: "avgpool2dNode",
        position: { x: 1300, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "flatten-8",
        type: "flattenNode",
        position: { x: 1500, y: 300 },
        data: {},
      },
      {
        id: "fc1-9",
        type: "linearNode",
        position: { x: 1700, y: 300 },
        data: { in_features: 400, out_features: 120 },
      },
      {
        id: "relu3-10",
        type: "reluNode",
        position: { x: 1900, y: 300 },
        data: {},
      },
      {
        id: "fc2-11",
        type: "linearNode",
        position: { x: 2100, y: 300 },
        data: { in_features: 120, out_features: 84 },
      },
      {
        id: "relu4-12",
        type: "reluNode",
        position: { x: 2300, y: 300 },
        data: {},
      },
      {
        id: "fc3-13",
        type: "linearNode",
        position: { x: 2500, y: 300 },
        data: { in_features: 84, out_features: 10 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "pool1-4" },
      { id: "e4-5", source: "pool1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "relu2-6" },
      { id: "e6-7", source: "relu2-6", target: "pool2-7" },
      { id: "e7-8", source: "pool2-7", target: "flatten-8" },
      { id: "e8-9", source: "flatten-8", target: "fc1-9" },
      { id: "e9-10", source: "fc1-9", target: "relu3-10" },
      { id: "e10-11", source: "relu3-10", target: "fc2-11" },
      { id: "e11-12", source: "fc2-11", target: "relu4-12" },
      { id: "e12-13", source: "relu4-12", target: "fc3-13" },
    ],
  },
  {
    name: "AlexNet",
    description: "Deep CNN with dropout (2012)",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 3, height: 224, width: 224 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 3, out_channels: 64, kernel_size: 11, stride: 4, padding: 2 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 200 },
        data: {},
      },
      {
        id: "pool1-4",
        type: "maxpool2dNode",
        position: { x: 700, y: 200 },
        data: { kernel_size: 3, stride: 2 },
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 64, out_channels: 192, kernel_size: 5, stride: 1, padding: 2 },
      },
      {
        id: "relu2-6",
        type: "reluNode",
        position: { x: 1100, y: 200 },
        data: {},
      },
      {
        id: "pool2-7",
        type: "maxpool2dNode",
        position: { x: 1300, y: 200 },
        data: { kernel_size: 3, stride: 2 },
      },
      {
        id: "conv3-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 192, out_channels: 384, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu3-9",
        type: "reluNode",
        position: { x: 1700, y: 200 },
        data: {},
      },
      {
        id: "conv4-10",
        type: "conv2dNode",
        position: { x: 1900, y: 200 },
        data: { in_channels: 384, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu4-11",
        type: "reluNode",
        position: { x: 2100, y: 200 },
        data: {},
      },
      {
        id: "conv5-12",
        type: "conv2dNode",
        position: { x: 2300, y: 200 },
        data: { in_channels: 256, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu5-13",
        type: "reluNode",
        position: { x: 2500, y: 200 },
        data: {},
      },
      {
        id: "pool3-14",
        type: "maxpool2dNode",
        position: { x: 2700, y: 200 },
        data: { kernel_size: 3, stride: 2 },
      },
      {
        id: "adaptive-15",
        type: "adaptiveavgpool2dNode",
        position: { x: 2900, y: 200 },
        data: { output_size: [6, 6] },
      },
      {
        id: "flatten-16",
        type: "flattenNode",
        position: { x: 3100, y: 400 },
        data: {},
      },
      {
        id: "dropout1-17",
        type: "dropoutNode",
        position: { x: 3300, y: 400 },
        data: { p: 0.5 },
      },
      {
        id: "fc1-18",
        type: "linearNode",
        position: { x: 3500, y: 400 },
        data: { in_features: 9216, out_features: 4096 },
      },
      {
        id: "relu6-19",
        type: "reluNode",
        position: { x: 3700, y: 400 },
        data: {},
      },
      {
        id: "dropout2-20",
        type: "dropoutNode",
        position: { x: 3900, y: 400 },
        data: { p: 0.5 },
      },
      {
        id: "fc2-21",
        type: "linearNode",
        position: { x: 4100, y: 400 },
        data: { in_features: 4096, out_features: 4096 },
      },
      {
        id: "relu7-22",
        type: "reluNode",
        position: { x: 4300, y: 400 },
        data: {},
      },
      {
        id: "fc3-23",
        type: "linearNode",
        position: { x: 4500, y: 400 },
        data: { in_features: 4096, out_features: 1000 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "pool1-4" },
      { id: "e4-5", source: "pool1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "relu2-6" },
      { id: "e6-7", source: "relu2-6", target: "pool2-7" },
      { id: "e7-8", source: "pool2-7", target: "conv3-8" },
      { id: "e8-9", source: "conv3-8", target: "relu3-9" },
      { id: "e9-10", source: "relu3-9", target: "conv4-10" },
      { id: "e10-11", source: "conv4-10", target: "relu4-11" },
      { id: "e11-12", source: "relu4-11", target: "conv5-12" },
      { id: "e12-13", source: "conv5-12", target: "relu5-13" },
      { id: "e13-14", source: "relu5-13", target: "pool3-14" },
      { id: "e14-15", source: "pool3-14", target: "adaptive-15" },
      { id: "e15-16", source: "adaptive-15", target: "flatten-16" },
      { id: "e16-17", source: "flatten-16", target: "dropout1-17" },
      { id: "e17-18", source: "dropout1-17", target: "fc1-18" },
      { id: "e18-19", source: "fc1-18", target: "relu6-19" },
      { id: "e19-20", source: "relu6-19", target: "dropout2-20" },
      { id: "e20-21", source: "dropout2-20", target: "fc2-21" },
      { id: "e21-22", source: "fc2-21", target: "relu7-22" },
      { id: "e22-23", source: "relu7-22", target: "fc3-23" },
    ],
  },
  {
    name: "ResNet Block",
    description: "Residual block with skip connection",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 64, height: 56, width: 56 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 150 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 150 },
        data: { num_features: 64 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 150 },
        data: {},
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 150 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 150 },
        data: { num_features: 64 },
      },
      {
        id: "add-7",
        type: "addNode",
        position: { x: 1300, y: 300 },
        data: {},
      },
      {
        id: "relu2-8",
        type: "reluNode",
        position: { x: 1500, y: 300 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "add-7", targetHandle: "input1" },
      { id: "e1-7", source: "input-1", target: "add-7", targetHandle: "input2" },
      { id: "e7-8", source: "add-7", target: "relu2-8" },
    ],
  },
  {
    name: "U-Net Encoder",
    description: "U-Net encoder with skip connections",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 1, height: 256, width: 256 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 300 },
        data: { in_channels: 1, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 300 },
        data: {},
      },
      {
        id: "conv2-4",
        type: "conv2dNode",
        position: { x: 700, y: 300 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu2-5",
        type: "reluNode",
        position: { x: 900, y: 300 },
        data: {},
      },
      {
        id: "pool1-6",
        type: "maxpool2dNode",
        position: { x: 1100, y: 400 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv3-7",
        type: "conv2dNode",
        position: { x: 1300, y: 500 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu3-8",
        type: "reluNode",
        position: { x: 1500, y: 500 },
        data: {},
      },
      {
        id: "conv4-9",
        type: "conv2dNode",
        position: { x: 1700, y: 500 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu4-10",
        type: "reluNode",
        position: { x: 1900, y: 500 },
        data: {},
      },
      {
        id: "upconv1-11",
        type: "convtranspose2dNode",
        position: { x: 2100, y: 400 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 2, stride: 2 },
      },
      {
        id: "concat1-12",
        type: "concatenateNode",
        position: { x: 2300, y: 350 },
        data: { dim: 1 },
      },
      {
        id: "conv5-13",
        type: "conv2dNode",
        position: { x: 2500, y: 350 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu5-14",
        type: "reluNode",
        position: { x: 2700, y: 350 },
        data: {},
      },
      {
        id: "conv6-15",
        type: "conv2dNode",
        position: { x: 2900, y: 350 },
        data: { in_channels: 64, out_channels: 1, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "conv2-4" },
      { id: "e4-5", source: "conv2-4", target: "relu2-5" },
      { id: "e5-6", source: "relu2-5", target: "pool1-6" },
      { id: "e6-7", source: "pool1-6", target: "conv3-7" },
      { id: "e7-8", source: "conv3-7", target: "relu3-8" },
      { id: "e8-9", source: "relu3-8", target: "conv4-9" },
      { id: "e9-10", source: "conv4-9", target: "relu4-10" },
      { id: "e10-11", source: "relu4-10", target: "upconv1-11" },
      { id: "e11-12", source: "upconv1-11", target: "concat1-12", targetHandle: "input1" },
      { id: "e5-12", source: "relu2-5", target: "concat1-12", targetHandle: "input2" },
      { id: "e12-13", source: "concat1-12", target: "conv5-13" },
      { id: "e13-14", source: "conv5-13", target: "relu5-14" },
      { id: "e14-15", source: "relu5-14", target: "conv6-15" },
    ],
  },
  {
    name: "Simple YOLO",
    description: "Simplified YOLO detection head",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 3, height: 416, width: 416 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 3, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 200 },
        data: { num_features: 32 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 200 },
        data: {},
      },
      {
        id: "pool1-5",
        type: "maxpool2dNode",
        position: { x: 900, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv2-6",
        type: "conv2dNode",
        position: { x: 1100, y: 200 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn2-7",
        type: "batchnorm2dNode",
        position: { x: 1300, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu2-8",
        type: "reluNode",
        position: { x: 1500, y: 200 },
        data: {},
      },
      {
        id: "pool2-9",
        type: "maxpool2dNode",
        position: { x: 1700, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv3-10",
        type: "conv2dNode",
        position: { x: 1900, y: 200 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn3-11",
        type: "batchnorm2dNode",
        position: { x: 2100, y: 200 },
        data: { num_features: 128 },
      },
      {
        id: "relu3-12",
        type: "reluNode",
        position: { x: 2300, y: 200 },
        data: {},
      },
      {
        id: "conv4-13",
        type: "conv2dNode",
        position: { x: 2500, y: 200 },
        data: { in_channels: 128, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn4-14",
        type: "batchnorm2dNode",
        position: { x: 2700, y: 200 },
        data: { num_features: 256 },
      },
      {
        id: "relu4-15",
        type: "reluNode",
        position: { x: 2900, y: 200 },
        data: {},
      },
      {
        id: "conv5-16",
        type: "conv2dNode",
        position: { x: 3100, y: 200 },
        data: { in_channels: 256, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "pool1-5" },
      { id: "e5-6", source: "pool1-5", target: "conv2-6" },
      { id: "e6-7", source: "conv2-6", target: "bn2-7" },
      { id: "e7-8", source: "bn2-7", target: "relu2-8" },
      { id: "e8-9", source: "relu2-8", target: "pool2-9" },
      { id: "e9-10", source: "pool2-9", target: "conv3-10" },
      { id: "e10-11", source: "conv3-10", target: "bn3-11" },
      { id: "e11-12", source: "bn3-11", target: "relu3-12" },
      { id: "e12-13", source: "relu3-12", target: "conv4-13" },
      { id: "e13-14", source: "conv4-13", target: "bn4-14" },
      { id: "e14-15", source: "bn4-14", target: "relu4-15" },
      { id: "e15-16", source: "relu4-15", target: "conv5-16" },
    ],
  },
  {
    name: "DenseNet Block",
    description: "Dense block with concatenation connections",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 64, height: 32, width: 32 },
      },
      {
        id: "bn1-2",
        type: "batchnorm2dNode",
        position: { x: 300, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 200 },
        data: {},
      },
      {
        id: "conv1-4",
        type: "conv2dNode",
        position: { x: 700, y: 200 },
        data: { in_channels: 64, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "concat1-5",
        type: "concatenateNode",
        position: { x: 900, y: 300 },
        data: { dim: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 200 },
        data: { num_features: 96 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "conv2-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 96, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "concat2-9",
        type: "concatenateNode",
        position: { x: 1700, y: 350 },
        data: { dim: 1 },
      },
      {
        id: "bn3-10",
        type: "batchnorm2dNode",
        position: { x: 1900, y: 200 },
        data: { num_features: 128 },
      },
      {
        id: "relu3-11",
        type: "reluNode",
        position: { x: 2100, y: 200 },
        data: {},
      },
      {
        id: "conv3-12",
        type: "conv2dNode",
        position: { x: 2300, y: 200 },
        data: { in_channels: 128, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "concat3-13",
        type: "concatenateNode",
        position: { x: 2500, y: 400 },
        data: { dim: 1 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "bn1-2" },
      { id: "e2-3", source: "bn1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "conv1-4" },
      { id: "e4-5", source: "conv1-4", target: "concat1-5", targetHandle: "input1" },
      { id: "e1-5", source: "input-1", target: "concat1-5", targetHandle: "input2" },
      { id: "e5-6", source: "concat1-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "relu2-7" },
      { id: "e7-8", source: "relu2-7", target: "conv2-8" },
      { id: "e8-9", source: "conv2-8", target: "concat2-9", targetHandle: "input1" },
      { id: "e5-9", source: "concat1-5", target: "concat2-9", targetHandle: "input2" },
      { id: "e9-10", source: "concat2-9", target: "bn3-10" },
      { id: "e10-11", source: "bn3-10", target: "relu3-11" },
      { id: "e11-12", source: "relu3-11", target: "conv3-12" },
      { id: "e12-13", source: "conv3-12", target: "concat3-13", targetHandle: "input1" },
      { id: "e9-13", source: "concat2-9", target: "concat3-13", targetHandle: "input2" },
    ],
  },
  {
    name: "VGG-16 Block",
    description: "VGG-style convolutional block with batch norm",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 3, height: 224, width: 224 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 3, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 200 },
        data: {},
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "pool1-8",
        type: "maxpool2dNode",
        position: { x: 1500, y: 300 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv3-9",
        type: "conv2dNode",
        position: { x: 1700, y: 400 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn3-10",
        type: "batchnorm2dNode",
        position: { x: 1900, y: 400 },
        data: { num_features: 128 },
      },
      {
        id: "relu3-11",
        type: "reluNode",
        position: { x: 2100, y: 400 },
        data: {},
      },
      {
        id: "conv4-12",
        type: "conv2dNode",
        position: { x: 2300, y: 400 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn4-13",
        type: "batchnorm2dNode",
        position: { x: 2500, y: 400 },
        data: { num_features: 128 },
      },
      {
        id: "relu4-14",
        type: "reluNode",
        position: { x: 2700, y: 400 },
        data: {},
      },
      {
        id: "pool2-15",
        type: "maxpool2dNode",
        position: { x: 2900, y: 300 },
        data: { kernel_size: 2, stride: 2 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "relu2-7" },
      { id: "e7-8", source: "relu2-7", target: "pool1-8" },
      { id: "e8-9", source: "pool1-8", target: "conv3-9" },
      { id: "e9-10", source: "conv3-9", target: "bn3-10" },
      { id: "e10-11", source: "bn3-10", target: "relu3-11" },
      { id: "e11-12", source: "relu3-11", target: "conv4-12" },
      { id: "e12-13", source: "conv4-12", target: "bn4-13" },
      { id: "e13-14", source: "bn4-13", target: "relu4-14" },
      { id: "e14-15", source: "relu4-14", target: "pool2-15" },
    ],
  },
  {
    name: "Inception Module",
    description: "Inception block with parallel convolutions",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 192, height: 28, width: 28 },
      },
      // 1x1 branch
      {
        id: "conv1x1-2",
        type: "conv2dNode",
        position: { x: 350, y: 100 },
        data: { in_channels: 192, out_channels: 64, kernel_size: 1, stride: 1, padding: 0 },
      },
      // 3x3 branch
      {
        id: "conv1x1_3x3-3",
        type: "conv2dNode",
        position: { x: 350, y: 250 },
        data: { in_channels: 192, out_channels: 96, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv3x3-4",
        type: "conv2dNode",
        position: { x: 600, y: 250 },
        data: { in_channels: 96, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      // 5x5 branch
      {
        id: "conv1x1_5x5-5",
        type: "conv2dNode",
        position: { x: 350, y: 450 },
        data: { in_channels: 192, out_channels: 16, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv5x5-6",
        type: "conv2dNode",
        position: { x: 600, y: 450 },
        data: { in_channels: 16, out_channels: 32, kernel_size: 5, stride: 1, padding: 2 },
      },
      // Pool branch
      {
        id: "pool-7",
        type: "maxpool2dNode",
        position: { x: 350, y: 650 },
        data: { kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv1x1_pool-8",
        type: "conv2dNode",
        position: { x: 600, y: 650 },
        data: { in_channels: 192, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
      // Concatenation
      {
        id: "concat-9",
        type: "concatenateNode",
        position: { x: 900, y: 400 },
        data: { dim: 1 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1x1-2" },
      { id: "e1-3", source: "input-1", target: "conv1x1_3x3-3" },
      { id: "e3-4", source: "conv1x1_3x3-3", target: "conv3x3-4" },
      { id: "e1-5", source: "input-1", target: "conv1x1_5x5-5" },
      { id: "e5-6", source: "conv1x1_5x5-5", target: "conv5x5-6" },
      { id: "e1-7", source: "input-1", target: "pool-7" },
      { id: "e7-8", source: "pool-7", target: "conv1x1_pool-8" },
      { id: "e2-9", source: "conv1x1-2", target: "concat-9", targetHandle: "input1" },
      { id: "e4-9", source: "conv3x3-4", target: "concat-9", targetHandle: "input2" },
      { id: "e6-9", source: "conv5x5-6", target: "concat-9", targetHandle: "input3" },
      { id: "e8-9", source: "conv1x1_pool-8", target: "concat-9", targetHandle: "input4" },
    ],
  },
  {
    name: "MobileNet Block",
    description: "Depthwise separable convolution block",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 32, height: 112, width: 112 },
      },
      {
        id: "depthwise-2",
        type: "depthwiseconv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 32, out_channels: 32, kernel_size: 3, stride: 1, padding: 1, groups: 32 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 200 },
        data: { num_features: 32 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 200 },
        data: {},
      },
      {
        id: "pointwise-5",
        type: "conv2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 300 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "depthwise-2" },
      { id: "e2-3", source: "depthwise-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "pointwise-5" },
      { id: "e5-6", source: "pointwise-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "relu2-7" },
    ],
  },

  {
    name: "MobileNetV1",
    description: "Complete MobileNetV1 architecture with depthwise separable convolutions",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 100 },
        data: { channels: 3, height: 224, width: 224 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 100 },
        data: { in_channels: 3, out_channels: 32, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 100 },
        data: { num_features: 32 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 100 },
        data: {},
      },
      {
        id: "dw1-5",
        type: "separableconv2dNode",
        position: { x: 900, y: 100 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 100 },
        data: { num_features: 64 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 100 },
        data: {},
      },
      {
        id: "dw2-8",
        type: "separableconv2dNode",
        position: { x: 1500, y: 100 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn3-9",
        type: "batchnorm2dNode",
        position: { x: 1700, y: 100 },
        data: { num_features: 128 },
      },
      {
        id: "relu3-10",
        type: "reluNode",
        position: { x: 1900, y: 100 },
        data: {},
      },
      {
        id: "dw3-11",
        type: "separableconv2dNode",
        position: { x: 2100, y: 100 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn4-12",
        type: "batchnorm2dNode",
        position: { x: 2300, y: 100 },
        data: { num_features: 128 },
      },
      {
        id: "relu4-13",
        type: "reluNode",
        position: { x: 2500, y: 100 },
        data: {},
      },
      {
        id: "pool-14",
        type: "adaptiveavgpool2dNode",
        position: { x: 2700, y: 100 },
        data: { output_size: [1, 1] },
      },
      {
        id: "flatten-15",
        type: "flattenNode",
        position: { x: 2900, y: 100 },
        data: {},
      },
      {
        id: "fc-16",
        type: "linearNode",
        position: { x: 3100, y: 100 },
        data: { in_features: 128, out_features: 1000 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "dw1-5" },
      { id: "e5-6", source: "dw1-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "relu2-7" },
      { id: "e7-8", source: "relu2-7", target: "dw2-8" },
      { id: "e8-9", source: "dw2-8", target: "bn3-9" },
      { id: "e9-10", source: "bn3-9", target: "relu3-10" },
      { id: "e10-11", source: "relu3-10", target: "dw3-11" },
      { id: "e11-12", source: "dw3-11", target: "bn4-12" },
      { id: "e12-13", source: "bn4-12", target: "relu4-13" },
      { id: "e13-14", source: "relu4-13", target: "pool-14" },
      { id: "e14-15", source: "pool-14", target: "flatten-15" },
      { id: "e15-16", source: "flatten-15", target: "fc-16" },
    ],
  },

  {
    name: "MobileNetV2 Block",
    description: "MobileNetV2 inverted residual block with expansion",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 32, height: 56, width: 56 },
      },
      {
        id: "expand-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 32, out_channels: 192, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 200 },
        data: { num_features: 192 },
      },
      {
        id: "relu1-4",
        type: "reluNode",
        position: { x: 700, y: 200 },
        data: {},
      },
      {
        id: "depthwise-5",
        type: "depthwiseconv2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 192, out_channels: 192, kernel_size: 3, stride: 1, padding: 1, groups: 192 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 200 },
        data: { num_features: 192 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "project-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 192, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "bn3-9",
        type: "batchnorm2dNode",
        position: { x: 1700, y: 200 },
        data: { num_features: 32 },
      },
      {
        id: "add-10",
        type: "addNode",
        position: { x: 1500, y: 400 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "expand-2" },
      { id: "e2-3", source: "expand-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "relu1-4" },
      { id: "e4-5", source: "relu1-4", target: "depthwise-5" },
      { id: "e5-6", source: "depthwise-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "relu2-7" },
      { id: "e7-8", source: "relu2-7", target: "project-8" },
      { id: "e8-9", source: "project-8", target: "bn3-9" },
      { id: "e9-10", source: "bn3-9", target: "add-10", targetHandle: "input1" },
      { id: "e1-10", source: "input-1", target: "add-10", targetHandle: "input2" },
    ],
  },

  {
    name: "Transformer Block",
    description: "Self-attention transformer block (conceptual representation, attention mechanism is simplified).",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 512, height: 1, width: 100 },
      },
      {
        id: "layernorm1-2",
        type: "layernormNode",
        position: { x: 300, y: 200 },
        data: { normalized_shape: 512 },
      },
      {
        id: "linear_q-3",
        type: "linearNode",
        position: { x: 500, y: 100 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "linear_k-4",
        type: "linearNode",
        position: { x: 500, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "linear_v-5",
        type: "linearNode",
        position: { x: 500, y: 300 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "attention-6",
        type: "linearNode",
        position: { x: 800, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "add1-7",
        type: "addNode",
        position: { x: 1000, y: 300 },
        data: {},
      },
      {
        id: "layernorm2-8",
        type: "layernormNode",
        position: { x: 1200, y: 300 },
        data: { normalized_shape: 512 },
      },
      {
        id: "ffn1-9",
        type: "linearNode",
        position: { x: 1400, y: 200 },
        data: { in_features: 512, out_features: 2048 },
      },
      {
        id: "relu-10",
        type: "reluNode",
        position: { x: 1600, y: 200 },
        data: {},
      },
      {
        id: "ffn2-11",
        type: "linearNode",
        position: { x: 1800, y: 200 },
        data: { in_features: 2048, out_features: 512 },
      },
      {
        id: "add2-12",
        type: "addNode",
        position: { x: 2000, y: 300 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "layernorm1-2" },
      { id: "e2-3", source: "layernorm1-2", target: "linear_q-3" },
      { id: "e2-4", source: "layernorm1-2", target: "linear_k-4" },
      { id: "e2-5", source: "layernorm1-2", target: "linear_v-5" },
      { id: "e3-6", source: "linear_q-3", target: "attention-6" },
      { id: "e6-7", source: "attention-6", target: "add1-7", targetHandle: "input1" },
      { id: "e1-7", source: "input-1", target: "add1-7", targetHandle: "input2" },
      { id: "e7-8", source: "add1-7", target: "layernorm2-8" },
      { id: "e8-9", source: "layernorm2-8", target: "ffn1-9" },
      { id: "e9-10", source: "ffn1-9", target: "relu-10" },
      { id: "e10-11", source: "relu-10", target: "ffn2-11" },
      { id: "e11-12", source: "ffn2-11", target: "add2-12", targetHandle: "input1" },
      { id: "e7-12", source: "add1-7", target: "add2-12", targetHandle: "input2" },
    ],
  },
  {
    name: "LSTM Network",
    description: "LSTM for sequence processing",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 100, height: 1, width: 50 },
      },
      {
        id: "lstm1-2",
        type: "lstmNode",
        position: { x: 350, y: 200 },
        data: { input_size: 50, hidden_size: 128, num_layers: 2 },
      },
      {
        id: "dropout1-3",
        type: "dropoutNode",
        position: { x: 600, y: 200 },
        data: { p: 0.3 },
      },
      {
        id: "lstm2-4",
        type: "lstmNode",
        position: { x: 850, y: 200 },
        data: { input_size: 128, hidden_size: 64, num_layers: 1 },
      },
      {
        id: "dropout2-5",
        type: "dropoutNode",
        position: { x: 1100, y: 200 },
        data: { p: 0.3 },
      },
      {
        id: "flatten-6",
        type: "flattenNode",
        position: { x: 1350, y: 300 },
        data: {},
      },
      {
        id: "linear-7",
        type: "linearNode",
        position: { x: 1600, y: 300 },
        data: { in_features: 6400, out_features: 10 },
      },
      {
        id: "softmax-8",
        type: "softmaxNode",
        position: { x: 1850, y: 300 },
        data: { dim: 1 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "lstm1-2" },
      { id: "e2-3", source: "lstm1-2", target: "dropout1-3" },
      { id: "e3-4", source: "dropout1-3", target: "lstm2-4" },
      { id: "e4-5", source: "lstm2-4", target: "dropout2-5" },
      { id: "e5-6", source: "dropout2-5", target: "flatten-6" },
      { id: "e6-7", source: "flatten-6", target: "linear-7" },
      { id: "e7-8", source: "linear-7", target: "softmax-8" },
    ],
  },
  {
    name: "GAN Generator",
    description: "Simple GAN generator with transposed convolutions. Note: The reshape operation is represented by a flatten node.",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 100, height: 1, width: 1 },
      },
      {
        id: "flatten-pre-linear",
        type: "flattenNode",
        position: { x: 200, y: 200 },
        data: {},
      },
      // Encoder
      {
        id: "linear-2",
        type: "linearNode",
        position: { x: 300, y: 200 },
        data: { in_features: 100, out_features: 8192 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 200 },
        data: {},
      },
      {
        id: "reshape-4",
        type: "flattenNode",
        position: { x: 700, y: 300 },
        data: {},
      },
      {
        id: "convt1-5",
        type: "convtranspose2dNode",
        position: { x: 900, y: 200 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 4, stride: 2, padding: 1 },
      },
      {
        id: "bn1-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 200 },
        data: { num_features: 256 },
      },
      {
        id: "relu2-7",
        type: "reluNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "convt2-8",
        type: "convtranspose2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 256, out_channels: 128, kernel_size: 4, stride: 2, padding: 1 },
      },
      {
        id: "bn2-9",
        type: "batchnorm2dNode",
        position: { x: 1700, y: 200 },
        data: { num_features: 128 },
      },
      {
        id: "relu3-10",
        type: "reluNode",
        position: { x: 1900, y: 200 },
        data: {},
      },
      {
        id: "convt3-11",
        type: "convtranspose2dNode",
        position: { x: 2100, y: 200 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 4, stride: 2, padding: 1 },
      },
      {
        id: "bn3-12",
        type: "batchnorm2dNode",
        position: { x: 2300, y: 200 },
        data: { num_features: 64 },
      },
      {
        id: "relu4-13",
        type: "reluNode",
        position: { x: 2500, y: 200 },
        data: {},
      },
      {
        id: "convt4-14",
        type: "convtranspose2dNode",
        position: { x: 2700, y: 200 },
        data: { in_channels: 64, out_channels: 3, kernel_size: 4, stride: 2, padding: 1 },
      },
      {
        id: "tanh-15",
        type: "tanhNode",
        position: { x: 2900, y: 300 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-pre", source: "input-1", target: "flatten-pre-linear" },
      { id: "epre-2", source: "flatten-pre-linear", target: "linear-2" },
      { id: "e2-3", source: "linear-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "reshape-4" },
      { id: "e4-5", source: "reshape-4", target: "convt1-5" },
      { id: "e5-6", source: "convt1-5", target: "bn1-6" },
      { id: "e6-7", source: "bn1-6", target: "relu2-7" },
      { id: "e7-8", source: "relu2-7", target: "convt2-8" },
      { id: "e8-9", source: "convt2-8", target: "bn2-9" },
      { id: "e9-10", source: "bn2-9", target: "relu3-10" },
      { id: "e10-11", source: "relu3-10", target: "convt3-11" },
      { id: "e11-12", source: "convt3-11", target: "bn3-12" },
      { id: "e12-13", source: "bn3-12", target: "relu4-13" },
      { id: "e13-14", source: "relu4-13", target: "convt4-14" },
      { id: "e14-15", source: "convt4-14", target: "tanh-15" },
    ],
  },
  {
    name: "Autoencoder",
    description: "Simple autoencoder for dimensionality reduction",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 784, height: 1, width: 1 },
      },
      {
        id: "flatten-pre-enc",
        type: "flattenNode",
        position: { x: 200, y: 300 },
        data: {},
      },
      // Encoder
      {
        id: "enc1-2",
        type: "linearNode",
        position: { x: 300, y: 300 },
        data: { in_features: 784, out_features: 512 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 300 },
        data: {},
      },
      {
        id: "enc2-4",
        type: "linearNode",
        position: { x: 700, y: 200 },
        data: { in_features: 512, out_features: 256 },
      },
      {
        id: "relu2-5",
        type: "reluNode",
        position: { x: 900, y: 200 },
        data: {},
      },
      {
        id: "enc3-6",
        type: "linearNode",
        position: { x: 1100, y: 100 },
        data: { in_features: 256, out_features: 64 },
      },
      {
        id: "relu3-7",
        type: "reluNode",
        position: { x: 1300, y: 100 },
        data: {},
      },
      // Bottleneck
      {
        id: "bottleneck-8",
        type: "linearNode",
        position: { x: 1500, y: 50 },
        data: { in_features: 64, out_features: 32 },
      },
      // Decoder
      {
        id: "dec1-9",
        type: "linearNode",
        position: { x: 1700, y: 100 },
        data: { in_features: 32, out_features: 64 },
      },
      {
        id: "relu4-10",
        type: "reluNode",
        position: { x: 1900, y: 100 },
        data: {},
      },
      {
        id: "dec2-11",
        type: "linearNode",
        position: { x: 2100, y: 200 },
        data: { in_features: 64, out_features: 256 },
      },
      {
        id: "relu5-12",
        type: "reluNode",
        position: { x: 2300, y: 200 },
        data: {},
      },
      {
        id: "dec3-13",
        type: "linearNode",
        position: { x: 2500, y: 300 },
        data: { in_features: 256, out_features: 512 },
      },
      {
        id: "relu6-14",
        type: "reluNode",
        position: { x: 2700, y: 300 },
        data: {},
      },
      {
        id: "output-15",
        type: "linearNode",
        position: { x: 2900, y: 400 },
        data: { in_features: 512, out_features: 784 },
      },
      {
        id: "sigmoid-16",
        type: "sigmoidNode",
        position: { x: 3100, y: 400 },
        data: {},
      },
    ],
    edges: [
      { id: "e1-pre", source: "input-1", target: "flatten-pre-enc" },
      { id: "epre-2", source: "flatten-pre-enc", target: "enc1-2" },
      { id: "e2-3", source: "enc1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "enc2-4" },
      { id: "e4-5", source: "enc2-4", target: "relu2-5" },
      { id: "e5-6", source: "relu2-5", target: "enc3-6" },
      { id: "e6-7", source: "enc3-6", target: "relu3-7" },
      { id: "e7-8", source: "relu3-7", target: "bottleneck-8" },
      { id: "e8-9", source: "bottleneck-8", target: "dec1-9" },
      { id: "e9-10", source: "dec1-9", target: "relu4-10" },
      { id: "e10-11", source: "relu4-10", target: "dec2-11" },
      { id: "e11-12", source: "dec2-11", target: "relu5-12" },
      { id: "e12-13", source: "relu5-12", target: "dec3-13" },
      { id: "e13-14", source: "dec3-13", target: "relu6-14" },
      { id: "e14-15", source: "relu6-14", target: "output-15" },
      { id: "e15-16", source: "output-15", target: "sigmoid-16" },
    ],
  },
  {
    name: "Siamese Network",
    description: "Siamese network for similarity learning",
    nodes: [
      {
        id: "input1-1",
        type: "inputNode",
        position: { x: 100, y: 200 },
        data: { channels: 1, height: 28, width: 28 },
      },
      {
        id: "input2-2",
        type: "inputNode",
        position: { x: 100, y: 600 },
        data: { channels: 1, height: 28, width: 28 },
      },
      // Shared feature extractor branch 1
      {
        id: "conv1a-3",
        type: "conv2dNode",
        position: { x: 350, y: 100 },
        data: { in_channels: 1, out_channels: 32, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu1a-4",
        type: "reluNode",
        position: { x: 550, y: 100 },
        data: {},
      },
      {
        id: "pool1a-5",
        type: "maxpool2dNode",
        position: { x: 750, y: 100 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv2a-6",
        type: "conv2dNode",
        position: { x: 950, y: 100 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu2a-7",
        type: "reluNode",
        position: { x: 1150, y: 100 },
        data: {},
      },
      {
        id: "pool2a-8",
        type: "maxpool2dNode",
        position: { x: 1350, y: 100 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "flatten1-9",
        type: "flattenNode",
        position: { x: 1550, y: 200 },
        data: {},
      },
      {
        id: "fc1a-10",
        type: "linearNode",
        position: { x: 1750, y: 200 },
        data: { in_features: 1024, out_features: 128 },
      },
      // Shared feature extractor branch 2
      {
        id: "conv1b-11",
        type: "conv2dNode",
        position: { x: 350, y: 500 },
        data: { in_channels: 1, out_channels: 32, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu1b-12",
        type: "reluNode",
        position: { x: 550, y: 500 },
        data: {},
      },
      {
        id: "pool1b-13",
        type: "maxpool2dNode",
        position: { x: 750, y: 500 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv2b-14",
        type: "conv2dNode",
        position: { x: 950, y: 500 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 5, stride: 1, padding: 0 },
      },
      {
        id: "relu2b-15",
        type: "reluNode",
        position: { x: 1150, y: 500 },
        data: {},
      },
      {
        id: "pool2b-16",
        type: "maxpool2dNode",
        position: { x: 1350, y: 500 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "flatten2-17",
        type: "flattenNode",
        position: { x: 1550, y: 600 },
        data: {},
      },
      {
        id: "fc1b-18",
        type: "linearNode",
        position: { x: 1750, y: 600 },
        data: { in_features: 1024, out_features: 128 },
      },
      // Distance computation
      {
        id: "concat-19",
        type: "concatenateNode",
        position: { x: 2000, y: 400 },
        data: { dim: 1 },
      },
      {
        id: "distance-20",
        type: "linearNode",
        position: { x: 2200, y: 400 },
        data: { in_features: 256, out_features: 1 },
      },
      {
        id: "sigmoid-21",
        type: "sigmoidNode",
        position: { x: 2400, y: 400 },
        data: {},
      },
    ],
    edges: [
      // Branch 1
      { id: "e1-3", source: "input1-1", target: "conv1a-3" },
      { id: "e3-4", source: "conv1a-3", target: "relu1a-4" },
      { id: "e4-5", source: "relu1a-4", target: "pool1a-5" },
      { id: "e5-6", source: "pool1a-5", target: "conv2a-6" },
      { id: "e6-7", source: "conv2a-6", target: "relu2a-7" },
      { id: "e7-8", source: "relu2a-7", target: "pool2a-8" },
      { id: "e8-9", source: "pool2a-8", target: "flatten1-9" },
      { id: "e9-10", source: "flatten1-9", target: "fc1a-10" },
      // Branch 2
      { id: "e2-11", source: "input2-2", target: "conv1b-11" },
      { id: "e11-12", source: "conv1b-11", target: "relu1b-12" },
      { id: "e12-13", source: "relu1b-12", target: "pool1b-13" },
      { id: "e13-14", source: "pool1b-13", target: "conv2b-14" },
      { id: "e14-15", source: "conv2b-14", target: "relu2b-15" },
      { id: "e15-16", source: "relu2b-15", target: "pool2b-16" },
      { id: "e16-17", source: "pool2b-16", target: "flatten2-17" },
      { id: "e17-18", source: "flatten2-17", target: "fc1b-18" },
      // Distance computation (concatenate then compute distance)
      { id: "e10-19", source: "fc1a-10", target: "concat-19", targetHandle: "input1" },
      { id: "e18-19", source: "fc1b-18", target: "concat-19", targetHandle: "input2" },
      { id: "e19-20", source: "concat-19", target: "distance-20" },
      { id: "e20-21", source: "distance-20", target: "sigmoid-21" },
    ],
  },
  {
    name: "Full U-Net",
    description: "Complete U-Net for semantic segmentation with encoder-decoder and skip connections",
    nodes: [
      // Input
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 1, height: 256, width: 256 },
      },
      // Encoder Path (Contracting)
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 350 },
        data: { in_channels: 1, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 350 },
        data: {},
      },
      {
        id: "conv2-4",
        type: "conv2dNode",
        position: { x: 700, y: 350 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu2-5",
        type: "reluNode",
        position: { x: 900, y: 350 },
        data: {},
      },
      {
        id: "pool1-6",
        type: "maxpool2dNode",
        position: { x: 1100, y: 450 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv3-7",
        type: "conv2dNode",
        position: { x: 1300, y: 500 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu3-8",
        type: "reluNode",
        position: { x: 1500, y: 500 },
        data: {},
      },
      {
        id: "conv4-9",
        type: "conv2dNode",
        position: { x: 1700, y: 500 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu4-10",
        type: "reluNode",
        position: { x: 1900, y: 500 },
        data: {},
      },
      {
        id: "pool2-11",
        type: "maxpool2dNode",
        position: { x: 2100, y: 600 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv5-12",
        type: "conv2dNode",
        position: { x: 2300, y: 650 },
        data: { in_channels: 128, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu5-13",
        type: "reluNode",
        position: { x: 2500, y: 650 },
        data: {},
      },
      {
        id: "conv6-14",
        type: "conv2dNode",
        position: { x: 2700, y: 650 },
        data: { in_channels: 256, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu6-15",
        type: "reluNode",
        position: { x: 2900, y: 650 },
        data: {},
      },
      {
        id: "pool3-16",
        type: "maxpool2dNode",
        position: { x: 3100, y: 750 },
        data: { kernel_size: 2, stride: 2 },
      },
      // Bottleneck
      {
        id: "conv7-17",
        type: "conv2dNode",
        position: { x: 3300, y: 800 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu7-18",
        type: "reluNode",
        position: { x: 3500, y: 800 },
        data: {},
      },
      {
        id: "conv8-19",
        type: "conv2dNode",
        position: { x: 3700, y: 800 },
        data: { in_channels: 512, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu8-20",
        type: "reluNode",
        position: { x: 3900, y: 800 },
        data: {},
      },
      // Decoder Path (Expansive)
      {
        id: "upconv1-21",
        type: "convtranspose2dNode",
        position: { x: 4100, y: 700 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 2, stride: 2, padding: 0, output_padding: 0 },
      },
      {
        id: "concat1-22",
        type: "concatenateNode",
        position: { x: 4300, y: 675 },
        data: { dim: 1 },
      },
      {
        id: "conv9-23",
        type: "conv2dNode",
        position: { x: 4500, y: 675 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu9-24",
        type: "reluNode",
        position: { x: 4700, y: 675 },
        data: {},
      },
      {
        id: "conv10-25",
        type: "conv2dNode",
        position: { x: 4900, y: 675 },
        data: { in_channels: 256, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu10-26",
        type: "reluNode",
        position: { x: 5100, y: 675 },
        data: {},
      },
      {
        id: "upconv2-27",
        type: "convtranspose2dNode",
        position: { x: 5300, y: 575 },
        data: { in_channels: 256, out_channels: 128, kernel_size: 2, stride: 2, padding: 0, output_padding: 0 },
      },
      {
        id: "concat2-28",
        type: "concatenateNode",
        position: { x: 5500, y: 525 },
        data: { dim: 1 },
      },
      {
        id: "conv11-29",
        type: "conv2dNode",
        position: { x: 5700, y: 525 },
        data: { in_channels: 256, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu11-30",
        type: "reluNode",
        position: { x: 5900, y: 525 },
        data: {},
      },
      {
        id: "conv12-31",
        type: "conv2dNode",
        position: { x: 6100, y: 525 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu12-32",
        type: "reluNode",
        position: { x: 6300, y: 525 },
        data: {},
      },
      {
        id: "upconv3-33",
        type: "convtranspose2dNode",
        position: { x: 6500, y: 425 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 2, stride: 2, padding: 0, output_padding: 0 },
      },
      {
        id: "concat3-34",
        type: "concatenateNode",
        position: { x: 6700, y: 375 },
        data: { dim: 1 },
      },
      {
        id: "conv13-35",
        type: "conv2dNode",
        position: { x: 6900, y: 375 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu13-36",
        type: "reluNode",
        position: { x: 7100, y: 375 },
        data: {},
      },
      {
        id: "conv14-37",
        type: "conv2dNode",
        position: { x: 7300, y: 375 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "relu14-38",
        type: "reluNode",
        position: { x: 7500, y: 375 },
        data: {},
      },
      // Output
      {
        id: "output-39",
        type: "conv2dNode",
        position: { x: 7700, y: 375 },
        data: { in_channels: 64, out_channels: 1, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      // Encoder path
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "conv2-4" },
      { id: "e4-5", source: "conv2-4", target: "relu2-5" },
      { id: "e5-6", source: "relu2-5", target: "pool1-6" },
      { id: "e6-7", source: "pool1-6", target: "conv3-7" },
      { id: "e7-8", source: "conv3-7", target: "relu3-8" },
      { id: "e8-9", source: "relu3-8", target: "conv4-9" },
      { id: "e9-10", source: "conv4-9", target: "relu4-10" },
      { id: "e10-11", source: "relu4-10", target: "pool2-11" },
      { id: "e11-12", source: "pool2-11", target: "conv5-12" },
      { id: "e12-13", source: "conv5-12", target: "relu5-13" },
      { id: "e13-14", source: "relu5-13", target: "conv6-14" },
      { id: "e14-15", source: "conv6-14", target: "relu6-15" },
      { id: "e15-16", source: "relu6-15", target: "pool3-16" },
      // Bottleneck
      { id: "e16-17", source: "pool3-16", target: "conv7-17" },
      { id: "e17-18", source: "conv7-17", target: "relu7-18" },
      { id: "e18-19", source: "relu7-18", target: "conv8-19" },
      { id: "e19-20", source: "conv8-19", target: "relu8-20" },
      // Decoder path
      { id: "e20-21", source: "relu8-20", target: "upconv1-21" },
      { id: "e21-22", source: "upconv1-21", target: "concat1-22", targetHandle: "input1" },
      { id: "e15-22", source: "relu6-15", target: "concat1-22", targetHandle: "input2" }, // Skip connection
      { id: "e22-23", source: "concat1-22", target: "conv9-23" },
      { id: "e23-24", source: "conv9-23", target: "relu9-24" },
      { id: "e24-25", source: "relu9-24", target: "conv10-25" },
      { id: "e25-26", source: "conv10-25", target: "relu10-26" },
      { id: "e26-27", source: "relu10-26", target: "upconv2-27" },
      { id: "e27-28", source: "upconv2-27", target: "concat2-28", targetHandle: "input1" },
      { id: "e10-28", source: "relu4-10", target: "concat2-28", targetHandle: "input2" }, // Skip connection
      { id: "e28-29", source: "concat2-28", target: "conv11-29" },
      { id: "e29-30", source: "conv11-29", target: "relu11-30" },
      { id: "e30-31", source: "relu11-30", target: "conv12-31" },
      { id: "e31-32", source: "conv12-31", target: "relu12-32" },
      { id: "e32-33", source: "relu12-32", target: "upconv3-33" },
      { id: "e33-34", source: "upconv3-33", target: "concat3-34", targetHandle: "input1" },
      { id: "e5-34", source: "relu2-5", target: "concat3-34", targetHandle: "input2" }, // Skip connection
      { id: "e34-35", source: "concat3-34", target: "conv13-35" },
      { id: "e35-36", source: "conv13-35", target: "relu13-36" },
      { id: "e36-37", source: "relu13-36", target: "conv14-37" },
      { id: "e37-38", source: "conv14-37", target: "relu14-38" },
      { id: "e38-39", source: "relu14-38", target: "output-39" },
    ],
  },
  {
    name: "StyleGAN Generator",
    description: "StyleGAN generator with mapping network and style blocks",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 512, height: 1, width: 1 },
      },
      {
        id: "flatten-pre-linear",
        type: "flattenNode",
        position: { x: 200, y: 200 },
        data: {},
      },
      // Mapping Network
      {
        id: "linear1-2",
        type: "linearNode",
        position: { x: 300, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "relu1-3",
        type: "reluNode",
        position: { x: 500, y: 200 },
        data: {},
      },
      {
        id: "linear2-4",
        type: "linearNode",
        position: { x: 700, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "relu2-5",
        type: "reluNode",
        position: { x: 900, y: 200 },
        data: {},
      },
      {
        id: "linear3-6",
        type: "linearNode",
        position: { x: 1100, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "relu3-7",
        type: "reluNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "linear4-8",
        type: "linearNode",
        position: { x: 1500, y: 200 },
        data: { in_features: 512, out_features: 512 },
      },
      {
        id: "relu4-9",
        type: "reluNode",
        position: { x: 1700, y: 200 },
        data: {},
      },
      // Style Blocks (example)
      {
        id: "const-10",
        type: "constantNode",
        position: { x: 300, y: 400 },
        data: { channels: 512, height: 4, width: 4 },
      },
      {
        id: "adain1-11",
        type: "adaptiveInstanceNormNode",
        position: { x: 500, y: 400 },
        data: { num_features: 512 },
      },
      {
        id: "conv1-12",
        type: "conv2dNode",
        position: { x: 700, y: 400 },
        data: { in_channels: 512, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "noise1-13",
        type: "noiseNode",
        position: { x: 900, y: 400 },
        data: { channels: 512, height: 4, width: 4 },
      },
      {
        id: "adain2-14",
        type: "adaptiveInstanceNormNode",
        position: { x: 1100, y: 400 },
        data: { num_features: 512 },
      },
      {
        id: "conv2-15",
        type: "conv2dNode",
        position: { x: 1300, y: 400 },
        data: { in_channels: 512, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "upsample-16",
        type: "upsampleNode",
        position: { x: 1500, y: 300 },
        data: { scale_factor: 2 },
      },
      {
        id: "output-17",
        type: "conv2dNode",
        position: { x: 1700, y: 300 },
        data: { in_channels: 512, out_channels: 3, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      // Mapping Network
      { id: "e1-pre", source: "input-1", target: "flatten-pre-linear" },
      { id: "epre-2", source: "flatten-pre-linear", target: "linear1-2" },
      { id: "e2-3", source: "linear1-2", target: "relu1-3" },
      { id: "e3-4", source: "relu1-3", target: "linear2-4" },
      { id: "e4-5", source: "linear2-4", target: "relu2-5" },
      { id: "e5-6", source: "relu2-5", target: "linear3-6" },
      { id: "e6-7", source: "linear3-6", target: "relu3-7" },
      { id: "e7-8", source: "relu3-7", target: "linear4-8" },
      { id: "e8-9", source: "linear4-8", target: "relu4-9" },
      // Style Blocks
      { id: "e10-11", source: "const-10", target: "adain1-11" },
      { id: "e9-11", source: "relu4-9", target: "adain1-11" },
      { id: "e11-12", source: "adain1-11", target: "conv1-12" },
      { id: "e12-13", source: "conv1-12", target: "noise1-13" },
      { id: "e13-14", source: "noise1-13", target: "adain2-14" },
      { id: "e9-14", source: "relu4-9", target: "adain2-14" },
      { id: "e14-15", source: "adain2-14", target: "conv2-15" },
      { id: "e15-16", source: "conv2-15", target: "upsample-16" },
      { id: "e16-17", source: "upsample-16", target: "output-17" },
    ],
  },
  {
    name: "YOLOv1",
    description: "Original YOLO architecture (2016) - You Only Look Once with exact 24 conv + 2 FC layers",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 300 },
        data: { channels: 3, height: 448, width: 448 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 200 },
        data: { in_channels: 3, out_channels: 64, kernel_size: 7, stride: 2, padding: 3 },
      },
      {
        id: "pool1-3",
        type: "maxpool2dNode",
        position: { x: 500, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv2-4",
        type: "conv2dNode",
        position: { x: 700, y: 200 },
        data: { in_channels: 64, out_channels: 192, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "pool2-5",
        type: "maxpool2dNode",
        position: { x: 900, y: 200 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv3-6",
        type: "conv2dNode",
        position: { x: 1100, y: 100 },
        data: { in_channels: 192, out_channels: 128, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv4-7",
        type: "conv2dNode",
        position: { x: 1300, y: 100 },
        data: { in_channels: 128, out_channels: 256, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv5-8",
        type: "conv2dNode",
        position: { x: 1500, y: 100 },
        data: { in_channels: 256, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv6-9",
        type: "conv2dNode",
        position: { x: 1700, y: 100 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "pool3-10",
        type: "maxpool2dNode",
        position: { x: 1900, y: 100 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv7-11",
        type: "conv2dNode",
        position: { x: 2100, y: 50 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv8-12",
        type: "conv2dNode",
        position: { x: 2300, y: 50 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv9-13",
        type: "conv2dNode",
        position: { x: 2500, y: 50 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv10-14",
        type: "conv2dNode",
        position: { x: 2700, y: 50 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv11-15",
        type: "conv2dNode",
        position: { x: 2900, y: 50 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv12-16",
        type: "conv2dNode",
        position: { x: 3100, y: 50 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv13-17",
        type: "conv2dNode",
        position: { x: 3300, y: 50 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv14-18",
        type: "conv2dNode",
        position: { x: 3500, y: 50 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv15-19",
        type: "conv2dNode",
        position: { x: 3700, y: 50 },
        data: { in_channels: 512, out_channels: 256, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv16-20",
        type: "conv2dNode",
        position: { x: 3900, y: 50 },
        data: { in_channels: 256, out_channels: 512, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv17-21",
        type: "conv2dNode",
        position: { x: 4100, y: 50 },
        data: { in_channels: 512, out_channels: 512, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv18-22",
        type: "conv2dNode",
        position: { x: 4300, y: 50 },
        data: { in_channels: 512, out_channels: 1024, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "pool4-23",
        type: "maxpool2dNode",
        position: { x: 4500, y: 50 },
        data: { kernel_size: 2, stride: 2 },
      },
      {
        id: "conv19-24",
        type: "conv2dNode",
        position: { x: 4700, y: 100 },
        data: { in_channels: 1024, out_channels: 512, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv20-25",
        type: "conv2dNode",
        position: { x: 4900, y: 100 },
        data: { in_channels: 512, out_channels: 1024, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv21-26",
        type: "conv2dNode",
        position: { x: 5100, y: 100 },
        data: { in_channels: 1024, out_channels: 512, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv22-27",
        type: "conv2dNode",
        position: { x: 5300, y: 100 },
        data: { in_channels: 512, out_channels: 1024, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv23-28",
        type: "conv2dNode",
        position: { x: 5500, y: 100 },
        data: { in_channels: 1024, out_channels: 1024, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv24-29",
        type: "conv2dNode",
        position: { x: 5700, y: 100 },
        data: { in_channels: 1024, out_channels: 1024, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "flatten-30",
        type: "flattenNode",
        position: { x: 5900, y: 200 },
        data: {},
      },
      {
        id: "fc1-31",
        type: "linearNode",
        position: { x: 6100, y: 200 },
        data: { in_features: 50176, out_features: 4096 },
      },
      {
        id: "fc2-32",
        type: "linearNode",
        position: { x: 6300, y: 200 },
        data: { in_features: 4096, out_features: 1470 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "pool1-3" },
      { id: "e3-4", source: "pool1-3", target: "conv2-4" },
      { id: "e4-5", source: "conv2-4", target: "pool2-5" },
      { id: "e5-6", source: "pool2-5", target: "conv3-6" },
      { id: "e6-7", source: "conv3-6", target: "conv4-7" },
      { id: "e7-8", source: "conv4-7", target: "conv5-8" },
      { id: "e8-9", source: "conv5-8", target: "conv6-9" },
      { id: "e9-10", source: "conv6-9", target: "pool3-10" },
      { id: "e10-11", source: "pool3-10", target: "conv7-11" },
      { id: "e11-12", source: "conv7-11", target: "conv8-12" },
      { id: "e12-13", source: "conv8-12", target: "conv9-13" },
      { id: "e13-14", source: "conv9-13", target: "conv10-14" },
      { id: "e14-15", source: "conv10-14", target: "conv11-15" },
      { id: "e15-16", source: "conv11-15", target: "conv12-16" },
      { id: "e16-17", source: "conv12-16", target: "conv13-17" },
      { id: "e17-18", source: "conv13-17", target: "conv14-18" },
      { id: "e18-19", source: "conv14-18", target: "conv15-19" },
      { id: "e19-20", source: "conv15-19", target: "conv16-20" },
      { id: "e20-21", source: "conv16-20", target: "conv17-21" },
      { id: "e21-22", source: "conv17-21", target: "conv18-22" },
      { id: "e22-23", source: "conv18-22", target: "pool4-23" },
      { id: "e23-24", source: "pool4-23", target: "conv19-24" },
      { id: "e24-25", source: "conv19-24", target: "conv20-25" },
      { id: "e25-26", source: "conv20-25", target: "conv21-26" },
      { id: "e26-27", source: "conv21-26", target: "conv22-27" },
      { id: "e27-28", source: "conv22-27", target: "conv23-28" },
      { id: "e28-29", source: "conv23-28", target: "conv24-29" },
      { id: "e29-30", source: "conv24-29", target: "flatten-30" },
      { id: "e30-31", source: "flatten-30", target: "fc1-31" },
      { id: "e31-32", source: "fc1-31", target: "fc2-32" },
    ],
  },
  {
    name: "YOLOv3",
    description: "YOLOv3 with multi-scale detection and residual connections",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 3, height: 416, width: 416 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 300 },
        data: { in_channels: 3, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 300 },
        data: { num_features: 32 },
      },
      {
        id: "leaky1-4",
        type: "leakyreluNode",
        position: { x: 700, y: 300 },
        data: { negative_slope: 0.1 },
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 300 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 300 },
        data: { num_features: 64 },
      },
      {
        id: "leaky2-7",
        type: "leakyreluNode",
        position: { x: 1300, y: 300 },
        data: { negative_slope: 0.1 },
      },
      {
        id: "conv3-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 64, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv4-9",
        type: "conv2dNode",
        position: { x: 1700, y: 200 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "add1-10",
        type: "addNode",
        position: { x: 1900, y: 300 },
        data: {},
      },
      {
        id: "conv5-11",
        type: "conv2dNode",
        position: { x: 2100, y: 300 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn3-12",
        type: "batchnorm2dNode",
        position: { x: 2300, y: 300 },
        data: { num_features: 128 },
      },
      {
        id: "leaky3-13",
        type: "leakyreluNode",
        position: { x: 2500, y: 300 },
        data: { negative_slope: 0.1 },
      },
      {
        id: "conv6-14",
        type: "conv2dNode",
        position: { x: 2700, y: 200 },
        data: { in_channels: 128, out_channels: 64, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv7-15",
        type: "conv2dNode",
        position: { x: 2900, y: 200 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "add2-16",
        type: "addNode",
        position: { x: 3100, y: 300 },
        data: {},
      },
      {
        id: "conv8-17",
        type: "conv2dNode",
        position: { x: 3300, y: 300 },
        data: { in_channels: 128, out_channels: 255, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "leaky1-4" },
      { id: "e4-5", source: "leaky1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "leaky2-7" },
      { id: "e7-8", source: "leaky2-7", target: "conv3-8" },
      { id: "e8-9", source: "conv3-8", target: "conv4-9" },
      { id: "e9-10", source: "conv4-9", target: "add1-10", targetHandle: "input1" },
      { id: "e7-10", source: "leaky2-7", target: "add1-10", targetHandle: "input2" },
      { id: "e10-11", source: "add1-10", target: "conv5-11" },
      { id: "e11-12", source: "conv5-11", target: "bn3-12" },
      { id: "e12-13", source: "bn3-12", target: "leaky3-13" },
      { id: "e13-14", source: "leaky3-13", target: "conv6-14" },
      { id: "e14-15", source: "conv6-14", target: "conv7-15" },
      { id: "e15-16", source: "conv7-15", target: "add2-16", targetHandle: "input1" },
      { id: "e13-16", source: "leaky3-13", target: "add2-16", targetHandle: "input2" },
      { id: "e16-17", source: "add2-16", target: "conv8-17" },
    ],
  },
  {
    name: "YOLOv5s",
    description: "YOLOv5 Small - Focus module and CSP bottleneck. Note: The focus layer is represented by a Conv2D layer assuming pre-processed input.",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 3, height: 640, width: 640 },
      },
      {
        id: "focus-2",
        type: "conv2dNode",
        position: { x: 300, y: 300 },
        data: { in_channels: 12, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 300 },
        data: { num_features: 32 },
      },
      {
        id: "silu1-4",
        type: "siluNode",
        position: { x: 700, y: 300 },
        data: {},
      },
      {
        id: "conv1-5",
        type: "conv2dNode",
        position: { x: 900, y: 300 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 300 },
        data: { num_features: 64 },
      },
      {
        id: "silu2-7",
        type: "siluNode",
        position: { x: 1300, y: 300 },
        data: {},
      },
      {
        id: "csp1-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 64, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv2-9",
        type: "conv2dNode",
        position: { x: 1700, y: 200 },
        data: { in_channels: 32, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "conv3-10",
        type: "conv2dNode",
        position: { x: 1900, y: 200 },
        data: { in_channels: 32, out_channels: 32, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "concat1-11",
        type: "concatenateNode",
        position: { x: 2100, y: 300 },
        data: { dim: 1 },
      },
      {
        id: "conv4-12",
        type: "conv2dNode",
        position: { x: 2300, y: 300 },
        data: { in_channels: 96, out_channels: 64, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv5-13",
        type: "conv2dNode",
        position: { x: 2500, y: 300 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "sppf-14",
        type: "maxpool2dNode",
        position: { x: 2700, y: 300 },
        data: { kernel_size: 5, stride: 1, padding: 2 },
      },
      {
        id: "conv6-15",
        type: "conv2dNode",
        position: { x: 2900, y: 300 },
        data: { in_channels: 128, out_channels: 255, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "focus-2" },
      { id: "e2-3", source: "focus-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "silu1-4" },
      { id: "e4-5", source: "silu1-4", target: "conv1-5" },
      { id: "e5-6", source: "conv1-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "silu2-7" },
      { id: "e7-8", source: "silu2-7", target: "csp1-8" },
      { id: "e8-9", source: "csp1-8", target: "conv2-9" },
      { id: "e9-10", source: "conv2-9", target: "conv3-10" },
      { id: "e10-11", source: "conv3-10", target: "concat1-11", targetHandle: "input1" },
      { id: "e7-11", source: "silu2-7", target: "concat1-11", targetHandle: "input2" },
      { id: "e11-12", source: "concat1-11", target: "conv4-12" },
      { id: "e12-13", source: "conv4-12", target: "conv5-13" },
      { id: "e13-14", source: "conv5-13", target: "sppf-14" },
      { id: "e14-15", source: "sppf-14", target: "conv6-15" },
    ],
  },
  {
    name: "YOLOv8n",
    description: "YOLOv8 Nano - Latest YOLO with C2f modules",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 3, height: 640, width: 640 },
      },
      {
        id: "conv1-2",
        type: "conv2dNode",
        position: { x: 300, y: 300 },
        data: { in_channels: 3, out_channels: 16, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 300 },
        data: { num_features: 16 },
      },
      {
        id: "silu1-4",
        type: "siluNode",
        position: { x: 700, y: 300 },
        data: {},
      },
      {
        id: "conv2-5",
        type: "conv2dNode",
        position: { x: 900, y: 300 },
        data: { in_channels: 16, out_channels: 32, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn2-6",
        type: "batchnorm2dNode",
        position: { x: 1100, y: 300 },
        data: { num_features: 32 },
      },
      {
        id: "silu2-7",
        type: "siluNode",
        position: { x: 1300, y: 300 },
        data: {},
      },
      {
        id: "c2f1-8",
        type: "conv2dNode",
        position: { x: 1500, y: 200 },
        data: { in_channels: 32, out_channels: 16, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "bottleneck1-9",
        type: "conv2dNode",
        position: { x: 1700, y: 200 },
        data: { in_channels: 16, out_channels: 16, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bottleneck2-10",
        type: "conv2dNode",
        position: { x: 1900, y: 200 },
        data: { in_channels: 16, out_channels: 16, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "concat1-11",
        type: "concatenateNode",
        position: { x: 2100, y: 300 },
        data: { dim: 1 },
      },
      {
        id: "conv3-12",
        type: "conv2dNode",
        position: { x: 2300, y: 300 },
        data: { in_channels: 48, out_channels: 32, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "conv4-13",
        type: "conv2dNode",
        position: { x: 2500, y: 300 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "sppf-14",
        type: "maxpool2dNode",
        position: { x: 2700, y: 300 },
        data: { kernel_size: 5, stride: 1, padding: 2 },
      },
      {
        id: "detect-15",
        type: "conv2dNode",
        position: { x: 2900, y: 300 },
        data: { in_channels: 64, out_channels: 84, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "conv1-2" },
      { id: "e2-3", source: "conv1-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "silu1-4" },
      { id: "e4-5", source: "silu1-4", target: "conv2-5" },
      { id: "e5-6", source: "conv2-5", target: "bn2-6" },
      { id: "e6-7", source: "bn2-6", target: "silu2-7" },
      { id: "e7-8", source: "silu2-7", target: "c2f1-8" },
      { id: "e8-9", source: "c2f1-8", target: "bottleneck1-9" },
      { id: "e9-10", source: "bottleneck1-9", target: "bottleneck2-10" },
      { id: "e10-11", source: "bottleneck2-10", target: "concat1-11", targetHandle: "input1" },
      { id: "e7-11", source: "silu2-7", target: "concat1-11", targetHandle: "input2" },
      { id: "e11-12", source: "concat1-11", target: "conv3-12" },
      { id: "e12-13", source: "conv3-12", target: "conv4-13" },
      { id: "e13-14", source: "conv4-13", target: "sppf-14" },
      { id: "e14-15", source: "sppf-14", target: "detect-15" },
    ],
  },
  {
    name: "YOLO-NAS",
    description: "YOLO-NAS with attention mechanisms and advanced blocks. Note: The multiplication operation is represented by an add node.",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 400 },
        data: { channels: 3, height: 640, width: 640 },
      },
      {
        id: "stem-2",
        type: "conv2dNode",
        position: { x: 300, y: 300 },
        data: { in_channels: 3, out_channels: 32, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "bn1-3",
        type: "batchnorm2dNode",
        position: { x: 500, y: 300 },
        data: { num_features: 32 },
      },
      {
        id: "silu1-4",
        type: "siluNode",
        position: { x: 700, y: 300 },
        data: {},
      },
      {
        id: "stage1-5",
        type: "conv2dNode",
        position: { x: 900, y: 300 },
        data: { in_channels: 32, out_channels: 64, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "attention1-6",
        type: "conv2dNode",
        position: { x: 1100, y: 200 },
        data: { in_channels: 64, out_channels: 64, kernel_size: 1, stride: 1, padding: 0 },
      },
      {
        id: "sigmoid1-7",
        type: "sigmoidNode",
        position: { x: 1300, y: 200 },
        data: {},
      },
      {
        id: "multiply1-8",
        type: "addNode",
        position: { x: 1500, y: 300 },
        data: {},
      },
      {
        id: "stage2-9",
        type: "conv2dNode",
        position: { x: 1700, y: 300 },
        data: { in_channels: 64, out_channels: 128, kernel_size: 3, stride: 2, padding: 1 },
      },
      {
        id: "qat-10",
        type: "conv2dNode",
        position: { x: 1900, y: 300 },
        data: { in_channels: 128, out_channels: 128, kernel_size: 3, stride: 1, padding: 1 },
      },
      {
        id: "bn2-11",
        type: "batchnorm2dNode",
        position: { x: 2100, y: 300 },
        data: { num_features: 128 },
      },
      {
        id: "silu2-12",
        type: "siluNode",
        position: { x: 2300, y: 300 },
        data: {},
      },
      {
        id: "head-13",
        type: "conv2dNode",
        position: { x: 2500, y: 300 },
        data: { in_channels: 128, out_channels: 255, kernel_size: 1, stride: 1, padding: 0 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "stem-2" },
      { id: "e2-3", source: "stem-2", target: "bn1-3" },
      { id: "e3-4", source: "bn1-3", target: "silu1-4" },
      { id: "e4-5", source: "silu1-4", target: "stage1-5" },
      { id: "e5-6", source: "stage1-5", target: "attention1-6" },
      { id: "e6-7", source: "attention1-6", target: "sigmoid1-7" },
      { id: "e7-8", source: "sigmoid1-7", target: "multiply1-8", targetHandle: "input1" },
      { id: "e5-8", source: "stage1-5", target: "multiply1-8", targetHandle: "input2" },
      { id: "e8-9", source: "multiply1-8", target: "stage2-9" },
      { id: "e9-10", source: "stage2-9", target: "qat-10" },
      { id: "e10-11", source: "qat-10", target: "bn2-11" },
      { id: "e11-12", source: "bn2-11", target: "silu2-12" },
      { id: "e12-13", source: "silu2-12", target: "head-13" },
    ],
  },
  {
    name: "Vision Transformer (ViT-Base/16)",
    description: "Vision Transformer (ViT) model. Note: Positional embedding is represented conceptually.",
    nodes: [
      {
        id: "input-1",
        type: "inputNode",
        position: { x: 100, y: 100 },
        data: { channels: 3, height: 224, width: 224 },
      },
      {
        id: "patch_embed-2",
        type: "conv2dNode",
        position: { x: 350, y: 100 },
        data: { in_channels: 3, out_channels: 768, kernel_size: 16, stride: 16, padding: 0 },
      },
      {
        id: "flatten-3",
        type: "flattenNode",
        position: { x: 600, y: 100 },
        data: { start_dim: 2 },
      },
      {
        id: "transpose-4",
        type: "transposeNode",
        position: { x: 850, y: 100 },
        data: { dim0: 1, dim1: 2 },
      },
      {
        id: "pos_embed-5",
        type: "addNode",
        position: { x: 1100, y: 100 },
        data: {},
      },
      {
        id: "dropout1-6",
        type: "dropoutNode",
        position: { x: 1350, y: 100 },
        data: { p: 0.1 },
      },
      {
        id: "transformer1-7",
        type: "transformerencoderlayerNode",
        position: { x: 350, y: 350 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer2-8",
        type: "transformerencoderlayerNode",
        position: { x: 600, y: 350 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer3-9",
        type: "transformerencoderlayerNode",
        position: { x: 850, y: 350 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer4-10",
        type: "transformerencoderlayerNode",
        position: { x: 1100, y: 350 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer5-11",
        type: "transformerencoderlayerNode",
        position: { x: 1350, y: 350 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer6-12",
        type: "transformerencoderlayerNode",
        position: { x: 350, y: 600 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer7-13",
        type: "transformerencoderlayerNode",
        position: { x: 600, y: 600 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer8-14",
        type: "transformerencoderlayerNode",
        position: { x: 850, y: 600 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer9-15",
        type: "transformerencoderlayerNode",
        position: { x: 1100, y: 600 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer10-16",
        type: "transformerencoderlayerNode",
        position: { x: 1350, y: 600 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer11-17",
        type: "transformerencoderlayerNode",
        position: { x: 350, y: 850 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "transformer12-18",
        type: "transformerencoderlayerNode",
        position: { x: 600, y: 850 },
        data: { d_model: 768, nhead: 12, dim_feedforward: 3072, dropout: 0.1 },
      },
      {
        id: "layernorm-19",
        type: "layernormNode",
        position: { x: 850, y: 850 },
        data: { normalized_shape: 768, eps: 1e-6 },
      },
      {
        id: "cls_token-20",
        type: "selectNode",
        position: { x: 1100, y: 850 },
        data: { dim: 1, index: 0 },
      },
      {
        id: "head-21",
        type: "linearNode",
        position: { x: 1350, y: 850 },
        data: { in_features: 768, out_features: 1000 },
      },
    ],
    edges: [
      { id: "e1-2", source: "input-1", target: "patch_embed-2" },
      { id: "e2-3", source: "patch_embed-2", target: "flatten-3" },
      { id: "e3-4", source: "flatten-3", target: "transpose-4" },
      { id: "e4-5", source: "transpose-4", target: "pos_embed-5", targetHandle: "input1" },
      { id: "e4-5-pos", source: "transpose-4", target: "pos_embed-5", targetHandle: "input2" },
      { id: "e5-6", source: "pos_embed-5", target: "dropout1-6" },
      { id: "e6-7", source: "dropout1-6", target: "transformer1-7" },
      { id: "e7-8", source: "transformer1-7", target: "transformer2-8" },
      { id: "e8-9", source: "transformer2-8", target: "transformer3-9" },
      { id: "e9-10", source: "transformer3-9", target: "transformer4-10" },
      { id: "e10-11", source: "transformer4-10", target: "transformer5-11" },
      { id: "e11-12", source: "transformer5-11", target: "transformer6-12" },
      { id: "e12-13", source: "transformer6-12", target: "transformer7-13" },
      { id: "e13-14", source: "transformer7-13", target: "transformer8-14" },
      { id: "e14-15", source: "transformer8-14", target: "transformer9-15" },
      { id: "e15-16", source: "transformer9-15", target: "transformer10-16" },
      { id: "e16-17", source: "transformer10-16", target: "transformer11-17" },
      { id: "e17-18", source: "transformer11-17", target: "transformer12-18" },
      { id: "e18-19", source: "transformer12-18", target: "layernorm-19" },
      { id: "e19-20", source: "layernorm-19", target: "cls_token-20" },
      { id: "e20-21", source: "cls_token-20", target: "head-21" },
    ],
  },
]
